# This template defines all network related resources used to serve the blog.

Resources:
  # Certificate for HTTPS access through CloudFront
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: 
        Ref: DomainName
      SubjectAlternativeNames:
        - Fn::Sub: "www.${DomainName}"

  # CDN serves S3 content over HTTPS for example.com
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    DependsOn: SiteBucket
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - Ref: DomainName
        DefaultRootObject: "index.html"
        PriceClass: 
          Ref: PriceClass
        Origins:
          - DomainName: 
              Fn::Join: 
                - ""
                - 
                  - Ref: DomainName 
                  - "."
                  - Fn::FindInMap:
                    - RegionMap
                    - Ref: "AWS::Region"
                    - websiteendpoint
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 
            Ref: DefaultTTL
          MinTTL: 
            Ref: MinimumTTL
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: "redirect-to-https"
        ViewerCertificate:
          AcmCertificateArn: 
            Ref: Certificate
          SslSupportMethod: sni-only

  # CDN serves S3 content over HTTPS for www.example.com
  RedirectCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    DependsOn: RedirectBucket
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - Fn::Sub: "www.${DomainName}"
        PriceClass: 
          Ref: PriceClass
        Origins:
          - DomainName: 
              Fn::Join:
                - ""
                - 
                  - Fn::Sub: "www.${DomainName}"
                  - "."
                  - Fn::FindInMap:
                    - RegionMap
                    - Ref: "AWS::Region"
                    - websiteendpoint
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 
            Ref: DefaultTTL
          MinTTL: 
            Ref: MinimumTTL
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: "allow-all"
        ViewerCertificate:
          AcmCertificateArn: 
            Ref: Certificate
          SslSupportMethod: sni-only

  DNSRecords:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName: 
        Fn::Sub: "${DomainName}."
      RecordSets:
        - Name: 
            Fn::Sub: "${DomainName}."
          Type: A
          AliasTarget:
            DNSName: 
              Fn::GetAtt: CloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # CloudFront
        - Name: 
            Fn::Sub: "www.${DomainName}."
          Type: A
          AliasTarget:
            DNSName: 
              Fn::GetAtt: RedirectCloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # CloudFront

